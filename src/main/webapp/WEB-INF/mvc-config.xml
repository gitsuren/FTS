<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- Uncomment and your base-package here: <context:component-scan base-package="org.springframework.samples.web"/> -->

	<context:component-scan base-package="com.suru.fts" />

	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving
		up static resources in the ${webappRoot}/resources directory -->
	<!-- <mvc:resources mapping="/**" location="/" /> -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="defaultContentType" value="text/html" />
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean>
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
<constructor-arg name="mongo" ref="mongo"/>
<constructor-arg name="databaseName" value="fts"/>
<constructor-arg name="userCredentials" ref="mongoCredentials"/>
</bean>

<bean id="mongoCredentials"
  class="org.springframework.data.authentication.UserCredentials">
     <constructor-arg name="username" value="" />
     <constructor-arg name="password" value="" />
</bean>

<bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
<!--<property name="host" value="172.17.0.1"/>-->
<property name="host" value="mymongoDB"/>
<property name="port" value="27017"/>
</bean>

	<mongo:repositories base-package="com.suru.fts.mongo.repository" />

	<!-- Tiles configuration <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions"> <list> <value>/WEB-INF/tiles/tiles-definitions.xml</value>
		</list> </property> </bean> -->

	<bean id="toggleVotingManager" class="com.suru.fts.voter.ToggleVoterManager">
		<property name="toggleVoters">
			<map>
				<entry key="com.suru.fts.mongo.domain.strategy.GroupStrategy"
					value-ref="groupVoters" />
			</map>
		</property>
	</bean>

	<util:list id="groupVoters">
		<ref bean="groupVoter" />
	</util:list>
</beans>
